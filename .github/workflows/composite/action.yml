name: "Build and push image"
description: "Build and push image to the registry"

inputs:
  service :
    description: "Service to build and push"
    required: true
  image_name:
    description: "Name of the image"
    required: true
  registry_username:
    description: "Registry username"
    required: true 
  registry_password:
    description: "registry password"
    required: true
  registry_endpoint:
    description: "repo registry docker.io/cardin21"

runs:
  using: "composite"
  steps:
  - name: Enable experimental features for the Docker daemon and CLI
    shell: bash
    run: |
        echo $'{\n  "experimental": true\n}' | sudo tee /etc/docker/daemon.json
        mkdir -p ~/.docker
        echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
        sudo service docker restart
  
  - name: Login to Docker Hub
    uses: docker/login-action@v2
    with:
      username: ${{ inputs.registry_username }}
      password: ${{ inputs.registry_password }}

  - name: Set SHA as env variable
    run: |
      currentsha=$(echo ${GITHUB_SHA##*/}) 
      echo "running on $currentsha"
      echo "SHA=$currentsha" >> $GITHUB_ENV
    shell: bash

  - name: Compose build sha ${{ inputs.service }}
    shell: bash
    run: sudo -E docker-compose build ${{ inputs.service }}
    working-directory: ./multicontainer-k8s
    env:
      TAG: ${{ env.SHA }}
      REGISTRY: ${{ inputs.registry_endpoints }}
  
  - name: Compose build latest ${{ inputs.service }}
    shell: bash
    run: sudo -E docker-compose build ${{ inputs.service }}
    working-directory: ./multicontainer-k8s
    env:
      TAG: latest
      REGISTRY: ${{ inputs.registry_endpoints }}
  
  - name: Compose push sha ${{ inputs.service }}
    shell: bash
    run: sudo -E docker-compose push ${{ inputs.service }}
    working-directory: ./multicontainer-k8s
    env:
      TAG: ${{ env.SHA }}
      REGISTRY: ${{ inputs.registry_endpoint }}
      
  - name: Compose push latest ${{ inputs.service }}
    shell: bash
    run: sudo -E docker-compose push ${{ inputs.service }}
    working-directory: ./multicontainer-k8s
    env:
      TAG: latest
      REGISTRY: ${{ inputs.registry_endpoint }}
  
  - name: Create multiarch manifest
    shell: bash 
    run: |
      docker --config ~/.docker manifest create ${{ inputs.registry_endpoint }}/${{ inputs.image_name }}:${{ env.SHA }} ${{ inputs.registry_endpoint }}/${{ inputs.image_name }}:linux-${{ env.SHA }}
      docker --config ~/.docker manifest create ${{ inputs.registry_endpoint }}/${{ inputs.image_name }}:latest ${{ inputs.registry_endpoint }}/${{ inputs.image_name }}:linux-latest
      docker --config ~/.docker manifest push ${{ inputs.registry_endpoint }}/${{ inputs.image_name }}:${{ env.SHA }}
      docker --config ~/.docker manifest push ${{ inputs.registry_endpoint }}/${{ inputs.image_name }}:latest